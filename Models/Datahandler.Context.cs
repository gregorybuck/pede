//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PatriciaEdgarAndDonEdgar.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class dbDatahandlerEntities : DbContext
    {
        public dbDatahandlerEntities()
            : base("name=dbDatahandlerEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<usp_VisitLogGet_Result> usp_VisitLogGet(Nullable<int> visitLogID, string iP)
        {
            var visitLogIDParameter = visitLogID.HasValue ?
                new ObjectParameter("VisitLogID", visitLogID) :
                new ObjectParameter("VisitLogID", typeof(int));
    
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_VisitLogGet_Result>("usp_VisitLogGet", visitLogIDParameter, iPParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_VisitLogSet(string pageVisited, string iP, string country, string region, string city, string zip, string latLong)
        {
            var pageVisitedParameter = pageVisited != null ?
                new ObjectParameter("PageVisited", pageVisited) :
                new ObjectParameter("PageVisited", typeof(string));
    
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var regionParameter = region != null ?
                new ObjectParameter("Region", region) :
                new ObjectParameter("Region", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var zipParameter = zip != null ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(string));
    
            var latLongParameter = latLong != null ?
                new ObjectParameter("LatLong", latLong) :
                new ObjectParameter("LatLong", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_VisitLogSet", pageVisitedParameter, iPParameter, countryParameter, regionParameter, cityParameter, zipParameter, latLongParameter);
        }
    }
}
